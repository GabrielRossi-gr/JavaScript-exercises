h1 {
	color: blue;
	font-size: 60px;
	background: gray;
}


div {
	background-color: blue;
	width: 100px;
	
}

/* 



Tipos num√©ricos e unidades comuns
Descri√ß√£o
Nessa aula vamos falar sobre tipos num√©ricos.

Tipos num√©ricos
<integer> - n√∫mero inteiro como -10 ou 223
<number> - n√∫mero decimal como -2.4, 64 ou 0.234
<dimension> - √© um <number> com uma unidade junto: 90deg, 2s, 8px
<percentage> - representa uma fra√ß√£o de outro n√∫mero: 50%
Unidades comuns
<length> - √© um dos mais usados no CSS e representa um valor de dist√¢ncia: px, em, vw
<angle> - representa um √¢ngulo: deg, rad, turn
<time> - representa um tempo: s, ms
<resolution> - representa resolu√ß√µes para dispositivos: dpi



Dist√¢ncias absolutas e relativas
Descri√ß√£o
Nessa aula vamos entender sobre dist√¢ncias absolutas e relativas.

Dist√¢ncias absolutas <length>
S√£o fixas e n√£o alteram seu valor.

| Unidade  | Nome                | Equival√™ncia         |
|----------|---------------------|----------------------|
| cm       | Cent√≠metros         | 1cm = 96px/2.54      | 
| in       | Inches (polegadas)  | 1in = 2.54cm = 96px  | 
| px       | Pixels              | 1px = 1/96th of 1in  |
*o mais comum e mais utilizado √© o px

*n√£o √© recomendado usar cm

Dist√¢ncias relativas
S√£o relativas a um outro valor, pode ser o elemento pai, ou root, ou o tamanho da tela.
Benef√≠cio: Maior adapta√ß√£o aos diferentes tipos de tela.
| Unidade  | Relativo a                                    |
|----------|-----------------------------------------------|
| em       | Tamanho da font do elemento pai               |
| rem      | Tamanho da font do elemento raiz (root/html)  | 
| vw       | 1% da viewport wid                            |  
| vh       | 1% da viewport height                         |
Normalmente o tamanho da font padr√£o do navegador √© de 16px e para mudar esse valor temos que fazer a altera√ß√£o no root ou no elemento html.
:root {
	font-size: 18px;
}

 OU 

html {
	font-size: 18px;
}
O viewport √© a parte da tela que est√° sendo exibida. No caso dos navegadores web, √© o que √© exibido na janela/tela do documento. Conte√∫dos que est√£o fora do viewport s√≥ ser√£o exibidos quando feito um scroll da √°rea de visualiza√ß√£o.


Dist√¢ncias absolutas e relativas
Descri√ß√£o
Nessa aula vamos entender sobre dist√¢ncias absolutas e relativas.

Dist√¢ncias absolutas <length>
S√£o fixas e n√£o alteram seu valor.

| Unidade  | Nome                | Equival√™ncia         |
|----------|---------------------|----------------------|
| cm       | Cent√≠metros         | 1cm = 96px/2.54      | 
| in       | Inches (polegadas)  | 1in = 2.54cm = 96px  | 
| px       | Pixels              | 1px = 1/96th of 1in  |
*o mais comum e mais utilizado √© o px

*n√£o √© recomendado usar cm

Dist√¢ncias relativas
S√£o relativas a um outro valor, pode ser o elemento pai, ou root, ou o tamanho da tela.
Benef√≠cio: Maior adapta√ß√£o aos diferentes tipos de tela.
| Unidade  | Relativo a                                    |
|----------|-----------------------------------------------|
| em       | Tamanho da font do elemento pai               |
| rem      | Tamanho da font do elemento raiz (root/html)  | 
| vw       | 1% da viewport wid                            |  
| vh       | 1% da viewport height                         |
Normalmente o tamanho da font padr√£o do navegador √© de 16px e para mudar esse valor temos que fazer a altera√ß√£o no root ou no elemento html.
:root {
	font-size: 18px;
}

 OU 

html {
	font-size: 18px;
}
O viewport √© a parte da tela que est√° sendo exibida. No caso dos navegadores web, √© o que √© exibido na janela/tela do documento. Conte√∫dos que est√£o fora do viewport s√≥ ser√£o exibidos quando feito um scroll da √°rea de visualiza√ß√£o.


Position
Descri√ß√£o
Posi√ß√µes
<position>

Representa um conjunto de coordenadas 2D:
top, right, bottom, left e center
Usado para alguns tipos de propriedades como o background-position
N√£o confundir com a propriedade position


Fun√ß√µes
Descri√ß√£o
Nessa aula vamos falar sobre fun√ß√µes no CSS.

Fun√ß√µes
Em programa√ß√£o, fun√ß√µes s√£o reconhecidas por causar um reaproveitamento de c√≥digo.
Exemplos de fun√ß√µes do CSS:

rgb()
hsl()
url()
calc()
Dentro dos par√™ntesis s√£o passados argumentos

Link da documenta√ß√£o do MDN: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Functions



Strings e identificadores
Descri√ß√£o
Strings: texto envolto em aspas
.box::after {
	content: "Isso √© uma string"
}
Identificadores: podemos ter nomes de cores como red, black, gold




Introdu√ß√£o
Descri√ß√£o
O Box Model √© fundamental para fazer layouts para web porque ele vai te dar maior facilidade na hora de aplicar o CSS. Ao entender os conceitos do Box Model muitas quest√µes do CSS come√ßam a fazer sentido.

O que √© o Box Model?
Cada elemento √© representado como uma caixa retangular
Essa caixa possui propriedades de uma caixa em 2 dimens√µes (largura x altura)
Propriedades da caixa
Tamanho (largura x altura) ‚Üí width | height
Conte√∫do ‚Üí content
Bordas ‚Üí border
Preenchimento interno ‚Üí padding
Espa√ßos fora da caixa ‚Üí margin
image.png

Discover - Todos os direitos reservados



Box Sizing
Descri√ß√£o
Nessa aula vamos ver sobre o box-sizing que √© o respons√°vel pelo calculo do tamanho total da caixa (box).

Podemos usar a ferramenta de desenvolvedor do pr√≥prio navegador para visualizar as especifica√ß√µes dos elementos da p√°gina

image.png

üíª Exemplo:
HTML:

<div>
	CSS √© incr√≠vel!
</div>
CSS:

div {
   width: 100px; 
   height: 100px;
   border: 1px solid red;
   margin: 10%;
}
Esse √© o resultado obtido ao usar o c√≥digo acima:

image.png

Quando o padding √© adicionado (padding: 0 20px;) faz com que aumente a largura da caixa, deixando de respeitar os 100px de largura:

image.png

E √© por isso que √© t√£o importante conhecer a propriedade do box-sizing.

Por padr√£o o navegador vai calcular o tamanho da caixa pelo content-box e vai somar com os outros boxes, no exemplo acima no lugar de 100px a caixa vai ficar com uma largura de 140px. Para que isso n√£o aconte√ßa, √© poss√≠vel mudar qual vai ser a refer√™ncia para o calculo do tamanho da caixa adicionando a propriedade box-sizing: border-box;.

Dessa forma o elemento vai ficar com a largura (width) determinado, que no caso do exemplo citado √© de 100px.

image.png

Normalmente usa-se o c√≥digo abaixo como forma de "resetar" o box-sizing que vem por padr√£o nos navegadores.

* {
   box-sizing: border-box;
}




Margin
Descri√ß√£o
Margin, √© o espa√ßo (margem) entre os elementos

Podemos dividir o margin em 4 valores:

 margin-top | margin-right | margin-bottom | margin-left 
values: <length> | <percentage> | auto

Geralmente usamos uma forma abreviada (shorthand) para escrever o margin. Esse formato segue o sentido hor√°rio iniciando pelo top, seguindo para right, bottom e left.

margin: 12px 16px 10px 4px;  TOP = 12px | RIGHT = 16px | BOTTOM = 10px | LEFT = 4px 
margin: 12px 16px 0;  TOP = 12px | RIGHT = 16px | BOTTOM = 0px | LEFT = 16px 
margin: 8px 16px;  TOP = 8px | RIGHT = 16px | BOTTOM = 8px | LEFT = 16px 
margin: 8px;  TOP = 8px | RIGHT = 8px | BOTTOM = 8px | LEFT = 8px 
O margin √© aplicado em elementos com display block
Cuidado com o margin collapsing que √© quando o top se junta ao bottom



Padding
Descri√ß√£o
O padding √© o preenchimento interno da caixa.

A propriedade padding pode ser escrita como nos formatos apresentados abaixo:

padding-top | padding-right | padding-bottom | padding-left
Geralmente usamos uma forma abreviada (shorthand) para escrever o padding. Esse formato segue o sentido hor√°rio iniciando pelo top, seguindo para right, bottom e left.

padding: 12px 16px 10px 4px; /* TOP = 12px | RIGHT = 16px | BOTTOM = 10px | LEFT = 4px 
padding: 12px 16px 0; /* TOP = 12px | RIGHT = 16px | BOTTOM = 0px | LEFT = 16px 
padding: 8px 16px; /* TOP = 8px | RIGHT = 16px | BOTTOM = 8px | LEFT = 16px 
padding: 8px; /* TOP = 8px | RIGHT = 8px | BOTTOM = 8px | LEFT = 8px 
O padding pode ter valores (values) de comprimento (px, em, rem) ou de porcentagem (%)

O padding poder√° causar diferen√ßa na largura de um elemento
obs.: Na aula sobre box-xizing aprendemos como resolver essa diferen√ßa na largura do elemento

https://app.rocketseat.com.br/node/uma-caixa-dentro-da-outra/lesson/box-sizing



Border-outline
Descri√ß√£o
S√£o as bordas da caixa

Documenta√ß√£o do MDN: https://developer.mozilla.org/en-US/docs/Web/CSS/border

value: <border-style> | <border-width> | <border-color>

style: solid | dotted | dashed | double | groove | ridge | inset | outset
width: <length>
color: <color>
div {
	/* shorthand 
	border-top: solid 2px; /* top | right | bottom | left */

	/* style 
	border: solid;

	/* width <length> | style 
	border: 2px dotted;

	/* style | color 
	border: outset #f33;

	/* width | style | color 
	border: medium dashed green;

}
E o outline?
O outline √© muito semelhante ao border, mas difere em 4 sentidos:
N√£o modifica o tamanho da caixa, pois n√£o √© parte do Box Model
Poder√° ser diferente de retangular
N√£o permite ajuste individuais
Mais usado pelo user agent para acessibilidade

*/